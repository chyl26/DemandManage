@model RepDetailedModel
@{
    ViewBag.Title = Model.RepName + "编辑";
    Layout = "../Shared/_LayoutAdminLTE.cshtml";
}

<head>
    <!--summernote-->
    <link href="~/Content/summernote/summernote.css" rel="stylesheet" />
    <script src="~/Content/summernote/summernote.js"></script>
    <script src="~/Content/summernote/summernote-zh-CN.js"></script>
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <!-- 内容标题 -->
    <section class="content-header">
        <h1>
            @Model.RepName
            <small>功能性需求编辑</small>
        </h1>
        <!--  导航地图  -->
        <ol class="breadcrumb">
            <li><a href="~/Home/Index"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="~/ProductInfo/Index"><i class="fa fa-dashboard"></i>产品管理</a></li>
            <li class="active">功能性需求编辑</li>
        </ol>
    </section>

    <!-- 内容Panel -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            @*<div class="box-header with-border">
                    <h3 class="box-title">创建新产品</h3>
                </div>*@
            <div class="box-body">
                <!--  这是写入要展示的内容  -->
                <div class="form-group">

                    @Html.EditorFor(m => m.RepName, new { htmlAttributes = new { @class = "form-control", placeholder = "请输入功能性需求名称" } })
                    @Html.ValidationMessageFor(m => m.RepName, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">

                    @Html.EditorFor(m => m.Priority, new { htmlAttributes = new { @class = "form-control", placeholder = "优先级" } })
                    @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "text-danger" })

                </div>

                @Html.HiddenFor(Model => Model.ProductId)
                @Html.HiddenFor(Model => Model.RepDetailedId)
                @Html.HiddenFor(Model => Model.RepDescribe)
                @Html.HiddenFor(Model => Model.CreateAt)
                @Html.HiddenFor(Model => Model.UserId)

                <div class="form-group">

                    <div id="summernote" placeholder="请输入产品功能性需求"></div>
                    @Html.ValidationMessageFor(m => m.RepDescribe, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">

                    @Html.TextAreaFor(m => m.Revision, new { @class = "form-control", rows = 5, placeholder = "请输入修改记录" })
                    @Html.ValidationMessageFor(m => m.Revision, "", new { @class = "text-danger" })

                </div>

                <div>
                    <button type="submit" class="btn btn-primary btn-block" id="btnRegister">保存</button>
                </div>
                <!--  这是写入要展示的内容  -->
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </section>
}





@using (Html.BeginForm("Edit", "RepDetailed", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })



}

@section scripts{
    <!-- 内部javascript -->
    <script>

        $(document).ready(function () {

            var placeholder = $("#summernote").attr("placeholder") || '';//设置输入提示
            var url = $("#summernote").attr("action") || '';//设置上传图片的url
            $("#summernote").summernote({
                lang: 'zh-CN',
                placeholder: placeholder,
                minHeight: 300,
                maxHeight: 800,
                dialogsFade: true,// 设置滑动效果Add fade effect on dialogs
                dialogsInBody: true,// 设置窗口显示位置Dialogs can be placed in body, not in
                disableDragAndDrop: false,//设置拖拽
                callbacks: {
                    onImageUpload: function (files) {
                        $(files).each(function () {
                            var file = this;
                            var data = new FormData();
                            data.append("file", file);
                            //ajax上传图片
                            $.ajax({
                                url: url,
                                type: "post",
                                data: data,
                                dataType: "json",
                                cache: false,
                                contentType: false,
                                processData: false,
                                success: function (response) {
                                    var jsonObj = JSON.parse(response);  // JSON.parse(); 方法
                                    var jsonObj = JSON.parse(response);  // JSON.parse(); 方法
                                    var imgNode = document.createElement('img');
                                    imgNode.setAttribute('src', jsonObj.result);
                                    $("#summernote").summernote('insertNode', imgNode);
                                },
                                error: function (response) {
                                }
                            });
                        });
                    }
                }
            });

            //初始化summernote的值
            var encodevalue = $("#RepDescribe").val();
            //var decodevalue = htmlDecode(encodevalue);
            $('#summernote').summernote('code', encodevalue);

        });

        //设置表单数值
        $("form").submit(function (e) {
            var makrup = $("#summernote").summernote('code');

            //var encodevalue = htmlEncode(makrup);
            $("#RepDescribe").val(makrup);
        });

    </script>

}
